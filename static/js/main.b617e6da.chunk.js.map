{"version":3,"sources":["component/background/bg.jpeg","component/header/albird.svg","component/background/index.js","component/header/index.js","component/footer/index.js","component/start/index.js","redux/actions/_actions.js","model/Participant.js","_data/mockParticipants.js","component/lottery-pool/index.js","redux/actions/lotteryPool.jsx","service/DrawService.js","utils/phone_mask.js","component/common/tag-cloud/index.js","component/lottery-drawing/index.js","component/lottery-edit/lottery-editable-table.js","redux/actions/lotteryDrawing.jsx","component/lottery-edit/index.js","component/lottery-setting/index.js","component/activity-setting/index.js","redux/actions/activitySetting.jsx","component/result/index.js","redux/reducers/lotteryPool.jsx","redux/reducers/activitySetting.jsx","redux/reducers/lotteryDrawing.jsx","redux/reducers/index.jsx","redux/store/index.jsx","app/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","Background","react_default","a","createElement","className","this","props","showBackground","particles_default","params","style","position","background","backgroundImage","concat","logo","backgroundSize","pointerEvents","children","Component","Header","activityName","connect","state","dataReducer","activitySetting","name","Footer","Date","getFullYear","target","href","Start","react_router_dom","to","_actions","Participant","phone","Object","classCallCheck","str","array","split","test","Error","participant","participants","LotteryPool","_this","possibleConstructorReturn","getPrototypeOf","call","next","history","push","verifyParticipantsInput","Promise","resolve","reject","filter","item","replace","length","map","fromString","err","onTextChange","setState","allParticipantsInput","verifyParticipants","saveNameList","then","allParticipants","setLotteryPool","catch","error","loadDemoData","mockParticipants","participantToString","join","_this2","index_es","icon","faQuestionCircle","onClick","id","multiple","required","placeholder","onChange","event","outlineColor","validParticipantCount","disabled","_this3","message","lotteryPool","Action","DrawService","noDuplicate","isRolling","isPickBlocked","clearInterval","timer","all","setInterval","change","bind","oneItemIndex","splice","index","Math","floor","currentlySelectedIndex","currentlySelectedItem","onSelectedChangedCallback","callback","onPickBlockedChangedCallback","arguments","undefined","blocked","setPickBlocked","setTimeout","removeItem","instance","phone_mask","symbol","substr","class","$","window","TagCloud","settings","entries","tags","slice","tag","label","radius","radiusMin","bgDraw","opacityOver","opacityOut","opacitySpeed","fov","fontFamily","fontSize","fontColor","fontWeight","fontStyle","fontStretch","fontToUpperCase","$el","el","svg3DTagCloud","ref","React","LotteryDrawing","noPrize","isPrizeChanged","computeCurrentPrize","drawService","pickOneThenDo","selected","prize","currentPrize","addWinner","rollUp","console","getCurrentPrize","items","winners","winner","totalCount","lotteryDrawing","setting","find","lottery","existingCountOfCurrentPrize","getTitle","title","getContent","selectedParticipant","maskPhone","getButton","btnDisabled","tag_cloud","element","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","totalLotteryCount","reduce","sum","l","alert","goBack","launchFullscreen","document","documentElement","from","setOnSelectedChangedCallback","selectedItem","setNoDuplicate","setOnPickBlockedChangedCallback","uuidv4","require","DragHandle","SortableHandle","faBars","SortableList","SortableContainer","_ref","onItemChange","SortableItem","SortableElement","_ref2","sortIndex","key","defaultValue","onBlur","e","parseInt","faTrashAlt","LotteryEditableItem","onSortEnd","_ref3","oldIndex","newIndex","setLottery","arrayMove","lotteries","nextProps","lotteryItemBodyRef","scrollTo","scrollHeight","useDragHandle","assign","faPlusCircle","LotteryEdit","lottery_editable_table","LotterySetting","component_lottery_edit","ActivitySetting","onNameChange","setActivityName","Result","winnerList","winnerGroups","reverse","winnerGroup","prizeName","forEach","findIndex","action","combineReducers","composeEnhancers","composeWithDevTools","getStore","recoverFromStorage","createStore","serializedState","localStorage","getItem","JSON","parse","loadState","applyMiddleware","logger","App","saveState","stringify","setItem","confirmRecovered","confirm","store","subscribe","onbeforeunload","getState","component_background","Provider","header","react_router","exact","path","component","footer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","app","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b617e6da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.622bb7a1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/albird.aab060a4.svg\";","import React, { Component } from 'react';\nimport Particles from 'react-particles-js'\nimport logo from './bg.jpeg';\nimport './background.css';\nconst particles = {\n    number: {\n      value: 100,\n      density: {\n        enable: false,\n        value_area: 3200\n      }\n    },\n    color: {\n      value: \"#0FF\"\n    },\n    shape: {\n      type: \"circle\",\n      stroke: {\n        width: 0,\n        color: \"#000000\"\n      },\n      polygon: {\n        nb_sides: 5\n      },\n      image: {\n        src: \"\",\n        width: 100,\n        height: 100\n      }\n    },\n    opacity: {\n      value: 1,\n      random: true,\n      anim: {\n        enable: 1,\n        speed: 10,\n        opacity_min: .5,\n        sync: !1\n      }\n    },\n    size: {\n      value: 3,\n      random: true,\n      anim: {\n        enable: !1,\n        speed: 20,\n        size_min: 1,\n        sync: true\n      }\n    },\n    line_linked: {\n      enable: !0,\n      distance: 120,\n      color: \"#FF0\",\n      opacity: .6,\n      width: 1,\n    },\n  };\nclass Background extends Component {\n  render() {\n    return (\n      <div className={'particles'}>\n        { this.props.showBackground && <Particles\n          params={{\n            particles,\n          }}\n          style={{\n            position: 'fixed',\n            width: '100%',\n            height: '100%',\n            background: '#1a1a1a',\n            backgroundImage: `url(${logo})`,\n            backgroundSize: 'cover',\n            pointerEvents: 'none',\n          }}\n        /> }\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Background;\n","import React, { Component } from 'react';\nimport logo from './albird.svg'\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n  render() {\n    return (\n     <header className={this.props.className}>\n       <img width={24}  height={24} src={logo}/>\n       <span>{this.props.activityName}</span>\n     </header>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  activityName: state.dataReducer.activitySetting.name,\n});\n\nexport default connect(mapStateToProps)(Header);","import React from 'react';\n\nconst Footer = (props) => (\n      <footer className={props.className}>\n        ©{new Date().getFullYear()}\n        <span> <a target='_blank' href='http://wangbaiyuan.cn'>Baiyuan Wang</a> </span>\n        All Rights Reversed.\n        <span>  <a target='_blank' href='https://github.com/geekeren/Magpie-LuckyDraw'>Github</a> </span>\n      </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport {\n  Link\n} from 'react-router-dom'\nimport './start.css';\n\nclass Start extends Component {\n  render() {\n    return (\n      <div><Link to=\"/activity-setting\" className=\"creat_new_activity\">创建一个抽奖活动</Link></div>\n    );\n  }\n}\n\nexport default Start;\n","export default {\n  SET_LOTTERY_POOL: 'SET_LOTTERY_POOL',\n  ADD_WINNER: 'ADD_WINNER',\n  SET_ACTIVITY_NAME: 'SET_ACTIVITY_NAME',\n  SET_LOTTERY_SETTING: 'SET_LOTTERY_SETTING'\n}","export default class Participant {\n  constructor( name, phone) {\n    this.name = name;\n    this.phone = phone;\n  }\n  static fromString(str) {\n    const array = str.split(/\\t+|\\s+/, 2);\n    if(array[0] && array[1]) {\n      if (!(/^[1][3-9][0-9]{9}$/.test(array[1]))) {\n        throw new Error(`'${array[0]}'的手机号有误: 请输入11位数字`);\n      }\n      return new Participant(array[0], array[1]);\n    }\n    throw new Error(`'${str}' 无效: 姓名和手机号都需要`);\n  }\n  static participantToString(participant) {\n    return `${participant.name}\\t${participant.phone}`;\n  }\n  toString() {\n    return `${this.name}\\t${this.phone}`;\n  }\n}","const participants =\n`杨幂\t13110000000\n李易峰\t13110000001\n李宇春\t13110000002\n张靓颖\t13110000003\n周笔畅\t13110000004\n韩雪\t13110000005\n范冰冰\t13110000006\n赵薇\t13110000007\n马苏\t13110000008\n李小璐\t13110000009\n刘涛\t13110000010\n林依晨\t13110000011\n陈乔恩\t13110000012\n容祖儿\t13110000013\n林心如\t13110000014\n`;\n\nexport default participants;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from 'react-redux';\nimport { setLotteryPool } from '../../redux/actions/lotteryPool';\nimport Participant from \"../../model/Participant\";\nimport mockParticipants from \"../../_data/mockParticipants\";\nimport './lottery-pool.css'\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nclass LotteryPool extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: props.allParticipants && props.allParticipants.length > 0 ? '' : '抽奖池为空！',\n      allParticipantsInput: this.props.allParticipants.map(participant => Participant.participantToString(participant)).join(\"\\n\")\n    }\n  }\n\n  componentDidMount() {\n    this.verifyParticipants();\n  }\n\n  render() {\n    return (\n      <div className=\"lottery-pool\">\n        <header>抽奖池设置</header>\n        <section>每一行表示一名参与者（格式：‘姓名 手机号’）\n          <span className={'load_demo'} >\n            <FontAwesomeIcon icon={faQuestionCircle} />\n            <a onClick={this.loadDemoData}>加载示例数据</a>\n          </span>\n        </section>\n        <div id=\"input_container\">\n          <textarea\n            id=\"nameList\"\n            type=\"text\"\n            multiple\n            required\n            placeholder=\"郭晓 13800138000\"\n            value={this.state.allParticipantsInput}\n            onChange={(event) => this.onTextChange(event.target.value)}\n            style={{ outlineColor: this.state.error ? '#ff5417' : '#50c617' }}\n          />\n          <div className={'notice_msg'}>\n            {this.state.error && <span className={'err_msg'}>{this.state.error}</span>}\n            {this.state.validParticipantCount &&\n            <div>参与者总数：{this.state.validParticipantCount}</div>\n            }\n          </div>\n        </div>\n        <section className={'next-btn'}>\n          <button disabled={!!this.state.error} className={!!this.state.error ? \"disable\" : ''}\n                  onClick={this.saveNameList}>NEXT\n          </button>\n        </section>\n      </div>\n    );\n  }\n\n  next = () => {\n    this.props.history.push(\"/lottery-setting\");\n  };\n\n  verifyParticipantsInput = (value) => {\n    return new Promise((resolve, reject) => {\n      try {\n        const allParticipants = value.split(\"\\n\")\n          .filter(item => !!item || item.replace(/(^s*)|(s*$)/g, \"\").length !== 0)\n          .map(item => Participant.fromString(item));\n        resolve(allParticipants);\n      } catch (err) {\n        reject(err)\n      }\n    });\n\n  }\n  onTextChange = (value) => {\n    this.setState({\n      allParticipantsInput: value,\n    }, () => {\n      this.verifyParticipants();\n    })\n  };\n  saveNameList = () => {\n    this.verifyParticipantsInput(this.state.allParticipantsInput)\n      .then(allParticipants => {\n        this.props.setLotteryPool(allParticipants);\n        this.next();\n      })\n      .catch(error => {\n        this.setState({\n          error\n        });\n      })\n  };\n\n  loadDemoData = () => {\n    this.onTextChange(mockParticipants);\n  };\n\n  verifyParticipants() {\n    this.verifyParticipantsInput(this.state.allParticipantsInput)\n      .then((allParticipants) => {\n        if (allParticipants.length > 0) {\n          this.setState({\n            error: '',\n            validParticipantCount: allParticipants.length\n          });\n        } else {\n          this.setState({\n            error: '抽奖池为空！'\n          });\n        }\n      })\n      .catch(error => {\n        this.setState({\n          error: error.message\n        });\n      })\n  }\n}\n\nLotteryPool.propTypes = {\n  setLotteryPool: PropTypes.func.isRequired,\n};\nconst mapStateToProps = state => ({\n  allParticipants: state.dataReducer.lotteryPool.allParticipants,\n});\n\nexport default connect(mapStateToProps, { setLotteryPool })(LotteryPool);\n","import Action from './_actions'\nconst setLotteryPool = allParticipants => ({\n  type: Action.SET_LOTTERY_POOL,\n  allParticipants\n});\n\nconst addWinner = winner => ({\n  type: Action.ADD_WINNER,\n  winner\n});\n\nexport {\n  setLotteryPool,\n  addWinner\n}","export default class DrawService {\n\n  static instance;\n\n  constructor() {\n    this.noDuplicate = true;\n    this.isRolling = false;\n    this.isPickBlocked = false;\n  }\n\n  static from(all) {\n    if (!DrawService.instance) {\n      DrawService.instance = new DrawService();\n    }\n    DrawService.instance.all = all;\n    return DrawService.instance;\n  }\n\n  rollUp() {\n    if (!this.isRolling) {\n      clearInterval(this.timer);\n      if (this.all.length === 0) {\n        throw new Error(\"No item in pool\");\n      }\n      this.isRolling = true;\n      this.timer = setInterval(this.change.bind(this), 80);\n    }\n    return this;\n  }\n\n  removeItem(oneItemIndex) {\n    this.all.splice(oneItemIndex, 1);\n  }\n\n  change() {\n    const index = Math.floor(Math.random() * this.all.length);\n    this.currentlySelectedIndex = index;\n    this.currentlySelectedItem = this.all[index];\n    this.onSelectedChangedCallback(this.currentlySelectedItem);\n  }\n\n  setOnSelectedChangedCallback(callback) {\n    this.onSelectedChangedCallback = callback;\n    return this;\n  }\n  setOnPickBlockedChangedCallback(callback) {\n    this.onPickBlockedChangedCallback = callback;\n    return this;\n  }\n\n  setNoDuplicate(noDuplicate = true) {\n    this.noDuplicate = noDuplicate;\n    return this;\n  }\n\n  setPickBlocked(blocked) {\n    this.isPickBlocked = blocked;\n    this.onPickBlockedChangedCallback(blocked);\n  }\n  pickOneThenDo(callback) {\n\n    if (!this.isPickBlocked) {\n      this.setPickBlocked(true);\n      setTimeout((() => {\n        clearInterval(this.timer);\n        if (this.noDuplicate) {\n          this.removeItem(this.currentlySelectedIndex);\n        }\n        callback(this.currentlySelectedItem);\n        this.isRolling = false;\n        this.setPickBlocked(false);\n      }).bind(this), 1000, this);\n    }\n  }\n}\n","import React from 'react'\nexport default (phone, symbol) => {\n  return (<div>\n          {phone.substr(0, 3)}\n          <span class='mask'>{symbol}</span>\n          {phone.substr(7, 11)}\n    </div> );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nconst $ = window.$;\n\nclass TagCloud extends React.Component {\n  componentDidMount() {\n    const displayTags = this.props.tags.length > 100 ? this.props.tags.slice(0, 100) : this.props.tags;\n    const entries = displayTags.map(tag => ({\n      label: tag\n    }));\n    const settings = {\n      entries: entries,\n      width: 1500,\n      height: 1024,\n      radius: '65%',\n      radiusMin: 75,\n      bgDraw: false,\n      opacityOver: 0.95,\n      opacityOut: 0.05,\n      opacitySpeed: 6,\n      fov: 800,\n      speed: 0.2,\n      fontFamily: 'Oswald, Arial, sans-serif',\n      fontSize: '16',\n      fontColor: '#eee',\n      fontWeight: 'normal',\n      fontStyle: 'normal',\n      fontStretch: 'normal',\n      fontToUpperCase: false\n    };\n    this.$el = $(this.el);\n    this.$el.svg3DTagCloud( settings );\n  }\n\n  render() {\n    return (\n        <div className=\"tag-cloud\" ref={el => this.el = el} />\n    );\n  }\n}\nTagCloud.propTypes = {\n  tags: PropTypes.array.isRequired,\n};\n\nexport default TagCloud;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DrawService from \"../../service/DrawService\";\nimport { addWinner } from '../../redux/actions/lotteryPool';\nimport maskPhone from '../../utils/phone_mask';\nimport { connect } from 'react-redux';\nimport TagCloud from \"../common/tag-cloud\";\nimport './lottery-drawing.css'\n\nclass LotteryDrawing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedParticipant: {},\n      currentPrize: '',\n      isPrizeChanged: false,\n      btnDisabled: false,\n    };\n  }\n\n  render() {\n    return (\n      <div className={\"lottery-drawing\"}>\n        <div className=\"name-cloud-container\">\n          <TagCloud tags={this.props.allParticipants.map(participant => participant.name)}/>\n        </div>\n        <div>\n          <header className={'prize-title'}>\n            {this.getTitle()}\n          </header>\n          <div className={'rolling'}>\n            {this.getContent()}\n          </div>\n          <button className={this.state.btnDisabled ? \"wait\" : \"\"} disabled={this.state.btnDisabled} onClick={this.onClick.bind(this)}>{this.getButton()}</button>\n        </div>\n      </div>\n    );\n  }\n\n  onClick = () => {\n    if (this.state.noPrize) {\n      this.props.history.push(\"/result\");\n    } else {\n      if (this.state.isPrizeChanged) {\n        this.setState({\n          isPrizeChanged: false,\n        });\n        this.computeCurrentPrize();\n        return;\n      }\n      try {\n        if (this.drawService.isRolling) {\n          this.drawService.pickOneThenDo((selected) => {\n            selected.prize = this.state.currentPrize;\n            this.props.addWinner(selected);\n            this.computeCurrentPrize();\n          })\n        } else {\n          this.drawService.rollUp();\n        }\n      } catch (err) {\n        console.error(err.message)\n      }\n    }\n\n  };\n\n  getCurrentPrize = (next) => {\n    const items = this.props.lotteryPool.winners.filter(winner => (winner.prize.id === this.state.currentPrize.id));\n    if (!next && (this.state.currentPrize.totalCount - items.length || 0) >= 0 && this.state.currentPrize) {\n      if ((this.state.currentPrize.totalCount - items.length || 0) === 0) {\n        this.setState({\n          isPrizeChanged: true,\n        });\n      }\n      return this.state.currentPrize;\n    }\n\n    return this.props.lotteryDrawing.setting.find((lottery) => {\n        const items = this.props.lotteryPool.winners.filter(winner => (winner.prize.id === lottery.id));\n        if ((lottery.totalCount - items.length || 0) <= 0) {\n          return false;\n        }\n        return true\n      }\n    );\n  }\n  computeCurrentPrize = () => {\n    const currentPrize = this.getCurrentPrize(this.state.isPrizeChanged);\n    if (currentPrize) {\n      const existingCountOfCurrentPrize = this.props.lotteryPool.winners.filter(winner => winner.prize.id === currentPrize.id).length;\n      this.setState({\n        currentPrize,\n        existingCountOfCurrentPrize\n      });\n    } else {\n      this.setState({\n        noPrize: true\n      });\n    }\n    return currentPrize;\n  };\n  getTitle = () => {\n    if (this.state.existingCountOfCurrentPrize === 0 && !this.state.isPrizeChanged) {\n      return `${this.state.currentPrize.title}(${this.state.currentPrize.totalCount}名)`\n    } else if(this.state.noPrize){\n      return \"\";\n    }\n    return `${this.state.currentPrize.title}(${this.state.existingCountOfCurrentPrize} / ${this.state.currentPrize.totalCount})`\n  };\n\n  getContent = () => {\n    if (!this.state.selectedParticipant.phone || (this.state.existingCountOfCurrentPrize === 0 && !this.drawService.isRolling && !this.state.isPrizeChanged)) {\n      return \"等待开奖\";\n    } else if(this.state.noPrize){\n      return \"抽奖结束\";\n    }\n    return (<div className=\"selectedParticipant\">\n      <div className=\"name\">{this.state.selectedParticipant.name}</div>\n      <div className=\"phone\">{maskPhone(this.state.selectedParticipant.phone, '😝😝😝😝')}</div>\n    </div>)\n  };\n\n  getButton = () => {\n    if (this.state.noPrize) {\n      return \"抽奖结果\";\n    } else if (this.drawService) {\n      return this.drawService.isRolling ? \"stop\" : (this.state.isPrizeChanged ? \"next\" : \"start\")\n    }\n      return '';\n  };\n\n  launchFullscreen(element) {\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    }\n  }\n\n  componentDidMount() {\n    const totalLotteryCount = this.props.lotteryDrawing.setting.reduce((sum, l) => (sum + l.totalCount), 0);\n    if (this.props.allParticipants.length < totalLotteryCount) {\n      alert(\"奖项数大于参与者数\");\n      this.props.history.goBack();\n      return ;\n    }\n    this.launchFullscreen(document.documentElement);\n    this.drawService = DrawService.from(this.props.allParticipants)\n      .setOnSelectedChangedCallback((selectedItem) => {\n        this.setState({\n          selectedParticipant: selectedItem,\n        });\n      })\n      .setNoDuplicate(true)\n      .setOnPickBlockedChangedCallback((blocked) => {\n        this.setState({\n          btnDisabled: blocked\n        });\n      });\n    this.computeCurrentPrize();\n  }\n}\n\nLotteryDrawing.propTypes = {\n  addWinner: PropTypes.func.isRequired,\n  // currentPrize: PropTypes.shape(),\n};\nconst mapStateToProps = state => ({\n  allParticipants: state.dataReducer.lotteryPool.allParticipants,\n  lotteryPool: state.dataReducer.lotteryPool,\n  lotteryDrawing: state.dataReducer.lotteryDrawing\n});\nexport default connect(mapStateToProps, { addWinner })(LotteryDrawing);\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars, faTrashAlt, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { SortableContainer, SortableElement, arrayMove, SortableHandle } from 'react-sortable-hoc';\nimport { setLottery } from '../../redux/actions/lotteryDrawing';\nconst uuidv4 = require('uuid/v4');\n\nconst DragHandle = SortableHandle(() => <FontAwesomeIcon icon={faBars} size={16} className={'drag-handle'}/>);\nconst SortableList = SortableContainer(({ items, onItemChange }) => {\n  const SortableItem = SortableElement(({ value, sortIndex }) =>\n    <div key={sortIndex} className=\"lottery-item\">\n      <DragHandle/>\n      <div className=\"lottery-item-name\">\n        <input\n          type={'text'}\n          defaultValue={value.title}\n          onBlur={e => {\n            items.find(lottery => lottery.id === value.id).title = e.target.value\n            onItemChange(items)\n          }}\n        /></div>\n      <div className=\"lottery-item-count\">\n        <input\n          type={'number'}\n          defaultValue={value.totalCount}\n          onBlur={e => {\n            items.find(lottery => lottery.id === value.id).totalCount = parseInt(e.target.value)\n            onItemChange(items)\n          }}\n        />\n      </div>\n      <div className=\"lottery-item-remove\"\n           onClick={() => {\n             items = items.filter(lottery => lottery.id !== value.id)\n             onItemChange(items)\n           }}\n      >\n        <FontAwesomeIcon\n          icon={faTrashAlt}/>\n      </div>\n    </div>\n  );\n  return (\n    <div>\n      {items.map((value, index) => (\n        <SortableItem\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          sortIndex={index}\n        />\n      ))}\n    </div>\n  );\n});\n\nclass LotteryEditableItem extends React.Component {\n\n  componentWillReceiveProps(nextProps) {\n    setTimeout(() => {\n      if (this.lotteryItemBodyRef) {\n        this.lotteryItemBodyRef.scrollTo(this.lotteryItemBodyRef.scrollHeight, this.lotteryItemBodyRef.scrollHeight);\n      }\n    }, 100)\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.props.setLottery(arrayMove(this.props.lotteries, oldIndex, newIndex));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className={\"lottery-item-body\"} ref={el => this.lotteryItemBodyRef = el}>\n          <SortableList\n            useDragHandle\n            items={this.props.lotteries}\n            onItemChange={items => this.props.setLottery(Object.assign([], items))}\n            onSortEnd={this.onSortEnd.bind(this)}/>\n        </div>\n        <div className=\"lottery-item-add\"\n             onClick={() => {\n               const items = this.props.lotteries;\n               items.push({\n                 id: uuidv4(),\n                 title: '幸运奖',\n                 totalCount: 3,\n               })\n               this.props.setLottery(Object.assign([], items))\n             }}\n        >\n          <FontAwesomeIcon\n            icon={faPlusCircle}/>\n          添加奖项\n        </div>\n      </div>\n    )\n  }\n}\n\nLotteryEditableItem.propTypes = {\n  lotteries: PropTypes.array,\n  setLottery: PropTypes.func,\n};\nconst mapStateToProps = state => ({\n  lotteries: state.dataReducer.lotteryDrawing.setting\n});\n\nexport default connect(mapStateToProps, { setLottery })(LotteryEditableItem);\n","import Action from './_actions'\nconst setLottery = lottery => ({\n  type: Action.SET_LOTTERY_SETTING,\n  lottery\n});\n\nexport {\n  setLottery\n}","import React from \"react\";\nimport './lottery-edit.css';\nimport LotteryEditableTable from './lottery-editable-table';\n\nclass LotteryEdit extends React.Component {\n  render() {\n    return (<div>\n      <div className=\"prizes-container\">\n        <div className=\"lottery-items-header\">\n          <div className=\"lottery-item-name\">奖项</div>\n          <div className=\"lottery-item-count\">数量</div>\n        </div>\n        <LotteryEditableTable />\n      </div>\n\n    </div>)\n  }\n}\nexport default  LotteryEdit;\n\n","import React, { Component } from 'react';\nimport './lottery-setting.css'\nimport LotteryEdit from \"../lottery-edit/index\";\n\nclass LotterySetting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: '',\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"lottery-setting\">\n        <header>奖项设置</header>\n        <section className=\"lottery-edit\">\n          <LotteryEdit/>\n        </section>\n        <section className={'next-btn'}>\n          <button onClick={this.next}>NEXT</button>\n        </section>\n      </div>\n    );\n  }\n\n  next = () => {\n    this.props.history.push(\"/lottery-drawing\")\n  }\n}\n\nexport default LotterySetting;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { setActivityName } from '../../redux/actions/activitySetting'\nimport './activity-setting.css'\n\nclass ActivitySetting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activityName: props.activityName\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"activity-setting\">\n        <div>\n          <header>活动名称</header>\n          <section>\n            <input defaultValue={this.props.activityName} onChange={this.onNameChange.bind(this)}/>\n          </section>\n          <section className={'next-btn'}>\n            <button disabled={!this.state.activityName} className={!this.state.activityName ? \"disable\" : ''} onClick={this.next.bind(this)}>NEXT</button>\n          </section>\n        </div>\n      </div>\n    );\n  }\n  onNameChange = (element) => {\n    this.setState({\n      activityName: element.target.value\n    })\n  };\n  next = () => {\n    this.props.setActivityName(this.state.activityName);\n    this.props.history.push(\"/lottery-pool\")\n  }\n\n}\n\nActivitySetting.propTypes = {\n  setActivityName: PropTypes.func.isRequired,\n  activityName: PropTypes.string.isRequired,\n};\nconst mapStateToProps = state => ({\n  activityName: state.dataReducer.activitySetting.name,\n});\n\nexport default connect(mapStateToProps, { setActivityName })(ActivitySetting);\n","import Action from './_actions'\nconst setActivityName = name => ({\n  type: Action.SET_ACTIVITY_NAME,\n  name\n});\nexport {\n  setActivityName\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport maskPhone from '../../utils/phone_mask';\nimport './result.css';\n\nclass Result extends Component {\n  render() {\n    return (\n      <div>\n        <div>{this.winnerList()}</div>\n      </div>\n    );\n  }\n\n  winnerList() {\n    return (<div className=\"result_part\">\n      {\n        this.props.winnerGroups.reverse().map(winnerGroup => (<div>\n          <header className=\"special_prize_result_header\">{winnerGroup.prizeName}</header>\n          {winnerGroup.winner.map(winner =>\n            (<div className=\"result_item\">\n              <div className=\"result_name\">{winner.name}</div>\n              <div className=\"result_phone\">{maskPhone(winner.phone, '****')}</div>\n            </div>)\n          )}\n\n        </div>))\n      }\n    </div>)\n  }\n}\n\nconst mapStateToProps = state => {\n  const winners = state.dataReducer.lotteryPool.winners;\n  const winnerGroups = [];\n  winners.forEach(winner => {\n    const index = winnerGroups.findIndex((winnerGroup) => winnerGroup.prizeName === winner.prize.title);\n    if (index < 0) {\n      winnerGroups.push({\n        prizeName: winner.prize.title,\n        totalCount: winner.prize.totalCount,\n        winner: [winner]\n      })\n    } else {\n      winnerGroups[index].winner.push(winner);\n    }\n\n  });\n  return {\n    winnerGroups,\n  }\n};\nexport default connect(mapStateToProps)(Result);\n","import Action from '../actions/_actions'\n\nconst initialState = () => ({\n  allParticipants: [],\n  winners: []\n});\nconst lotteryPool = (state = initialState(), action) => {\n  switch (action.type) {\n    case Action.SET_LOTTERY_POOL:\n      state.allParticipants = action.allParticipants || [];\n      break;\n    case Action.ADD_WINNER:\n      if (action.winner) {\n        state.winners.push(action.winner);\n      }\n\n  }\n  return Object.assign({}, state);\n};\n\nexport default lotteryPool\n","import Action from '../actions/_actions'\n\nconst initialState = () => ({\n  name: \"\",\n});\nconst activitySetting = (state = initialState(), action) => {\n  switch (action.type) {\n    case Action.SET_ACTIVITY_NAME:\n      state.name = action.name || \"Magpie 抽奖平台\";\n  }\n  return Object.assign({}, state);\n};\n\nexport default activitySetting","import Action from '../actions/_actions'\n\nconst uuidv4 = require('uuid/v4');\nconst initialState = () => ({\n    setting: [{\n      id: uuidv4(),\n      title: '三等奖',\n      totalCount: 3,\n    },{\n      id: uuidv4(),\n      title: '二等奖',\n      totalCount: 2,\n    },{\n      id: uuidv4(),\n      title: '一等奖',\n      totalCount: 1,\n    }]\n  }\n);\nconst lotteryDrawing = (state = initialState(), action) => {\n  switch (action.type) {\n    case Action.SET_LOTTERY_SETTING:\n      state.setting = action.lottery;\n  }\n  return Object.assign({}, state);\n};\n\nexport default lotteryDrawing","import { combineReducers } from 'redux';\nimport lotteryPool from './lotteryPool';\nimport activitySetting from './activitySetting';\nimport lotteryDrawing from './lotteryDrawing';\n\nexport default combineReducers({\n  lotteryPool,\n  activitySetting,\n  lotteryDrawing,\n});\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport dataReducer from '../reducers';\n\nconst loadState = () => {\n  const serializedState = localStorage.getItem('state');\n  return JSON.parse(serializedState);\n};\nconst composeEnhancers = composeWithDevTools({});\nconst getStore = recoverFromStorage => createStore(\n  combineReducers({\n    dataReducer,\n  }),\n  recoverFromStorage ? loadState() : undefined,\n  composeEnhancers(\n    applyMiddleware(logger),\n  ),\n);\n\nexport default getStore;\n","import React, { Component } from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport Background from '../component/background';\nimport Header from '../component/header';\nimport Footer from '../component/footer';\nimport './App.css';\nimport Start from \"../component/start\";\nimport LotteryPool from \"../component/lottery-pool\";\nimport LotteryDrawing from \"../component/lottery-drawing\";\nimport LotterySetting from \"../component/lottery-setting\";\nimport ActivitySetting from \"../component/activity-setting\";\nimport Result from \"../component/result\";\nimport Provider from \"react-redux/es/components/Provider\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport getStore from \"../redux/store\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmRecovered: false,\n    }\n  }\n\n  componentDidMount() {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState && window.confirm('是否恢复上次数据？')) {\n      this.store = getStore(true)\n    } else {\n      this.store = getStore(false)\n      localStorage.removeItem('state');\n    }\n    this.setState({\n      confirmRecovered: true,\n    })\n    this.store.subscribe(() => {\n      window.onbeforeunload = (e) => {\n        const state = this.store.getState();\n        this.saveState(state);\n      };\n    })\n  }\n\n  saveState = (state) => {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Background\n          showBackground={true}\n        >\n          {!this.state.confirmRecovered ?\n            undefined\n            :\n            <Provider store={this.store}>\n              <div>\n                <Header className={'header'}/>\n                <article className={'main'}>\n                  <Switch>\n                    <Route exact path='/' component={Start}/>\n                    <Route path='/result' component={Result}/>\n                    <Route path='/lottery-drawing' component={LotteryDrawing}/>\n                    <Route path='/lottery-pool' component={LotteryPool}/>\n                    <Route path='/lottery-setting' component={LotterySetting}/>\n                    <Route path='/activity-setting' component={ActivitySetting}/>\n                    <Redirect from=\"/*\" to=\"/\"/>\n                  </Switch>\n                </article>\n                <Footer className={'footer'}/>\n              </div>\n            </Provider>\n          }\n        </Background>\n      </BrowserRouter>);\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport registerServiceWorker from './registerServiceWorker';\nReactDOM.render(<App/>, document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}